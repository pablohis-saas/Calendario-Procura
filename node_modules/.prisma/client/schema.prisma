generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Paciente {
  id                  String   @id @default(uuid())
  nombre              String
  fecha_nacimiento    DateTime
  genero              String
  direccion           String?
  telefono            String
  email               String
  documento_identidad String?
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  apellido            String
  cobros              Cobro[]
  citas               Cita[]

  @@map("pacientes")
}

model Usuario {
  id         String           @id @default(uuid())
  nombre     String
  email      String
  telefono   String
  created_at DateTime         @default(now())
  updated_at DateTime         @updatedAt
  rol        Rol
  cobros     Cobro[]
  historial  HistorialCobro[]
  citas      Cita[]

  @@map("usuarios")
}

model Consultorio {
  id         String              @id @default(uuid())
  nombre     String
  direccion  String
  created_at DateTime            @default(now())
  updated_at DateTime            @updatedAt
  conceptos  CobroConcepto[]
  precios    PrecioConsultorio[]
  citas      Cita[]

  @@map("consultorios")
}

model PrecioConsultorio {
  id             String      @id @default(uuid())
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt
  concepto       String
  consultorio_id String
  precio         Float
  consultorio    Consultorio @relation(fields: [consultorio_id], references: [id])

  @@map("precios_consultorio")
}

model Cobro {
  id           String            @id @default(uuid())
  fecha_cobro  DateTime
  monto_total  Float
  notas        String?
  created_at   DateTime          @default(now())
  updated_at   DateTime          @updatedAt
  paciente_id  String
  usuario_id   String
  estado       EstadoCobro
  metodo_pago  MetodoPago?
  conceptos    CobroConcepto[]
  paciente     Paciente          @relation(fields: [paciente_id], references: [id])
  usuario      Usuario           @relation(fields: [usuario_id], references: [id])
  historial    HistorialCobro[]
  metodos_pago MetodoPagoCobro[]

  @@map("cobros")
}

model CobroConcepto {
  id              String      @id @default(uuid())
  cantidad        Int
  subtotal        Float
  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt
  cobro_id        String
  consultorio_id  String
  precio_unitario Float
  servicio_id     String
  cobro           Cobro       @relation(fields: [cobro_id], references: [id])
  consultorio     Consultorio @relation(fields: [consultorio_id], references: [id])
  servicio        Servicio    @relation(fields: [servicio_id], references: [id])

  @@map("cobro_conceptos")
}

model HistorialCobro {
  id               String     @id @default(uuid())
  created_at       DateTime   @default(now())
  cobro_id         String
  detalles_antes   Json?
  detalles_despues Json
  tipo_cambio      TipoCambio
  usuario_id       String
  cobro            Cobro      @relation(fields: [cobro_id], references: [id])
  usuario          Usuario    @relation(fields: [usuario_id], references: [id])

  @@map("historial_cobros")
}

model Servicio {
  id          String          @id @default(uuid())
  nombre      String
  descripcion String?
  precio_base Float
  created_at  DateTime        @default(now())
  updated_at  DateTime        @updatedAt
  conceptos   CobroConcepto[]

  @@map("servicios")
}

model MetodoPagoCobro {
  id          String     @id @default(uuid())
  cobro_id    String
  metodo_pago MetodoPago
  monto       Float
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  cobro       Cobro      @relation(fields: [cobro_id], references: [id])

  @@map("metodos_pago_cobro")
}

model Cita {
  id             String      @id @default(uuid())
  paciente_id    String
  usuario_id     String
  consultorio_id String
  fecha_inicio   DateTime
  fecha_fin      DateTime
  titulo         String
  descripcion    String?
  estado         EstadoCita
  color          String?     @default("#3B82F6")
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt
  paciente       Paciente    @relation(fields: [paciente_id], references: [id])
  usuario        Usuario     @relation(fields: [usuario_id], references: [id])
  consultorio    Consultorio @relation(fields: [consultorio_id], references: [id])

  @@map("citas")
}

enum MetodoPago {
  EFECTIVO
  TARJETA_DEBITO
  TARJETA_CREDITO
  TRANSFERENCIA
  OTRO
}

enum EstadoCobro {
  PENDIENTE
  COMPLETADO
  CANCELADO
}

enum Rol {
  DOCTOR
  SECRETARIA
  ADMINISTRADOR
}

enum TipoCambio {
  CREACION
  EDICION
  ELIMINACION
}

enum EstadoCita {
  PROGRAMADA
  EN_CURSO
  COMPLETADA
  CANCELADA
  NO_ASISTIO
}
